리액트 프로젝트에서 타입스크립트 사용하기

JavaScript 는 weakly typed 언어이기에, 특정 숫자 변수를 선언한 다음에 변수에 문자열을 넣을 수도 있고, null 을 넣을 수도 있고, 배열을 넣을 수도 있다.
let value = 5;
value = '안녕하세요';
value = [1,2,3,4,5];
value = null

자동완성도 흔히 쓰는 Java / C# / C++ / Python 등의 언어를 사용 할 때처럼 제대로 되지 않는다.
VSCode 를 사용하면 어느정도 되고 있다고 착각 할 수도 있는데 사실 TypeScript 관련 기능이 이미 기본적으로 돌아가고있어서 되는 거다(진짜 몰랐다.....)
TypeScript 를 사용하면, 이러한 불편함을 해결해주어 개발을 훨씬 편하게 해준다.


타입스크립트를 사용하는 이유
1. IDE 를 더욱 더 적극적으로 활용 (자동완성, 타입확인)
TypeScript 를 사용하면 자동완성이 굉장히 잘된다. 함수를 사용 할 때 해당 함수가 어떤 파라미터를 필요로 하는지, 그리고 어떤 값을 반환하는지 코드를 따로 열어보지 않아도 알 수 있다.
리액트 컴포넌트의 경우 해당 컴포넌트를 사용하게 될 때 props 에는 무엇을 전달해줘야하는지, 
JSX 를 작성하는 과정에서 바로 알 수 있으며, 컴포넌트 내부에서도 자신의 props 에 어떤 값이 있으며, state 에 어떤 값이 있는지 알 수 있다.
리덕스와 함께 사용하게 될 때에도 스토어 안에 어떤 상태가 들어있는지 바로 조회가 가능해서 굉장히 편리하다고 한다.

2. 실수방지
함수, 컴포넌트 등의 타입 추론이, 예를 들어 null 이나 undefined 일 수도 있는 값의 내부 값 혹은 함수를 호출한다면 (예: 배열의 내장함수) 
사전에 null 체킹을 하지 않으면 오류를 띄우므로 null 체킹도 확실하게 할 수 있게 되다보니 사소한 오타를 만들면 코드를 실행하지 않더라도,
IDE 상에서 바로 알 수 있게 된다.


파일을 생성 할 때 직접 입력해서 만들 수도 있지만, 일반적으로는 명령어를 사용해서 생성한다.
TypeScript를 터미널을 통해서 글로벌로 설치해야 한다.
$ yarn global add typescript

그리고 이후 프로젝트 디렉터리 안에서 tsc --init 명령어를 입력하면 tsconfig.json 파일이 자동생성 된다.
만약 명령어가 작동하지 않는다면 npm install -g typescript 를 해보시고 다시 명령어를 실행하면 된다.

이 파일에서는 타입스크립트가 컴파일 될 때 필요한 옵션을 지정한다. 
tsc --init 명령어를 통해서 기본적으로 설정되어있는 것들이 어떤 의미를 갖고 있는지 알아봐야 한다.

○ target: 컴파일된 코드가 어떤 환경에서 실행될 지 정의한다.
예를들어서 화살표 함수를 사용하고 target 을 es5 로 한다면 일반 function 키워드를 사용하는 함수로 변환을 해준다.
하지만 이를 es6 로 설정한다면 화살표 함수를 그대로 유지해준다.

○ module: 컴파일된 코드가 어던 모듈 시스템을 사용할지 정의한다.
예를 들어서 이 값을 common 으로 하면 export default Sample 을 하게 됐을 때 컴파일 된 코드에서는 exports.default = helloWorld 로 변환해주지만,
이 값을 es2015 로 하면 export default Sample 을 그대로 유지하게 된다.

○ strict: 모든 타입 체킹 옵션을 활성화한다는 것을 의미한다.

○ esModuleInterop: commonjs 모듈 형태로 이루어진 파일을 es2015 모듈 형태로 불러올 수 있게 해준다. ↓ 아래 참고
https://stackoverflow.com/questions/56238356/understanding-esmoduleinterop-in-tsconfig-file

outDir 를 설정하면 컴파일된 파일들이 저장되는 경로를 지정 할 수 있다.

타입스크립트는 이렇게 *.ts 확장자를 사용한다.
message 값이 선언된 코드를 보면 : string 이라는 코드를 넣었는데, 이는 해당 상수 값이 문자열 이라는 것을 명시해준다.
만약에 해당 값을 숫자로 설정해버리게 된다면 에디터 상에서 오류가 나타나게 된다.


기본타입

